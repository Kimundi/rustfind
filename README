attempt to use rust libsyntax to find symbol definitions
just about workable now

"make" to compile and run test program
./rustfind -h to display options

./rustfind cratename.rs sourcefile.rs:line:col
   ... compiles 'cratename.rs',then shows the location 
   & definitoin of the symbol at sourcefile.rs:line:col
   so long as sourcefile.rs is in the crate

./rustfind -j cratename.rs -- dump spans & node definition links as JSON

Notes on sourcecode:-
--------------------
-find_ast_node contains the node scanning
-borrows code from rustdoc_ng
-there might be a fair amoount of repition with the compiler internals eg ast node wrappers,
this can be cleaned up..
-a lot would factor out if ctxt had a node_id:span map


roadmap
[1] a commandline tool rustfind sourcefile.rs:LINE:COLUMN: --> definition.rs:LINE:col
(to add add hoc navigation tools eg gedit external tools)
  [.1] possibly an interactive commandline tool (enter symbol-> dump location)
  [.2] possibly queries like "list all the functions that use this type, list all the impls' for this type.."
[1.1] dump definition links in json or something .. incase this can be used s n indexer for existing tools
[2] options to dump/pretty print more context for the definitoon
[2.5] maybe one of those html hyperlinked source generators, like woboq?
[3] use components for IDE integration?



